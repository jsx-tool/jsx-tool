name: Publish to NPM

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Verify version matches tag
        run: |
          TAG_VERSION="${{ github.event.release.tag_name }}"
          # Remove 'v' prefix if present
          TAG_VERSION="${TAG_VERSION#v}"
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi
          echo "âœ“ Version check passed: $PACKAGE_VERSION"

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Determine release type
        id: release-type
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            if [[ "${{ github.event.release.tag_name }}" == *"-beta"* ]]; then
              echo "tag=beta" >> $GITHUB_OUTPUT
            elif [[ "${{ github.event.release.tag_name }}" == *"-rc"* ]]; then
              echo "tag=rc" >> $GITHUB_OUTPUT
            else
              echo "tag=next" >> $GITHUB_OUTPUT
            fi
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        run: npm publish --tag ${{ steps.release-type.outputs.tag }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
